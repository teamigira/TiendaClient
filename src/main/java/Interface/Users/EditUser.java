package Interface.Users;

import Classes.AbstractClasses.EditedUser;
import Classes.AbstractClasses.EditedUserData;
import Classes.AbstractClasses.Roles;
import Classes.AbstractClasses.SelectedStaff;
import Classes.Functions.Permissions.PermissionFileManager;
import static Classes.Functions.Permissions.PermissionFileManager.loadRoles;
import Classes.Functions.Sales_Staffs;
import Database.DBConnection;
import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatGitHubIJTheme;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Nkanabo
 */
public class EditUser extends javax.swing.JFrame {

    /**
     * Creates new form EditSale
     */
    private static int roleId;
    private static String staffName;
    private static String email;
    private static String lastName;
    private static String phone;
    private static String password;
    private static String confirmPassword;
    private static int storeId;
    private static int managerId;
    private static String activeStatus;
    private static int userType;
    private static boolean isPasswordChanged;
    private Map<Integer, String> rolesMap;
    private Map<Integer, String> storeMap;
    private Map<Integer, String> managerMap;
    private static String userId;

    /**
     *
     */
    public EditUser(SelectedStaff selectedStaff) throws ClassNotFoundException, ParseException, SQLException {
        // Extract details from the Staff instance
        // Extract details from the SelectedStaff instance
        
        Connection connection = DBConnection.getConnectionInstance().getConnection();
        roleId = PermissionFileManager.getRoleId(selectedStaff.role, connection);
        staffName = selectedStaff.staff_name;
        email = selectedStaff.staff_email;
        lastName = selectedStaff.sur_name;
        phone = selectedStaff.phone_no;
        password = "";
        confirmPassword = "";
        storeId = Integer.parseInt(selectedStaff.store);
        managerId = Integer.parseInt(selectedStaff.manager_id);
        activeStatus = selectedStaff.Status;
        isPasswordChanged = false;
        userId = selectedStaff.userid;

        // Initialize the map to map IDs to corresponding texts
        rolesMap = new HashMap<>();

        ArrayList<Roles> rolelist = loadRoles();
        // Populate the rolesMap with role names from roleList
        for (Roles role : rolelist) {
            rolesMap.put(role.role_id, role.getRoleName());
        }

        storeMap = new HashMap<>();
        storeMap.put(1, "MAIN BRANCH");
        storeMap.put(2, "REGIONAL");

        managerMap = new HashMap<>();
        managerMap.put(1, "John Doe");
        managerMap.put(2, "Jane Doe");
        managerMap.put(3, "Julius Doe");

        initComponents();
        errormessage.setVisible(false);
        this.setLocationRelativeTo(null);
        this.setResizable(true);
        //this.setExtendedState(getExtendedState() | EditUser.MAXIMIZED_BOTH);

        // Initialize the combo box and populate it with the texts
        int r = roleId;
        
        int m = managerId;
        int s = storeId;
        for (String text : rolesMap.values()) {
            Roles.addItem(text);
        }
        

        for (String text : storeMap.values()) {
            store.addItem(text);
        }

        for (String text : managerMap.values()) {
            mngr.addItem(text);
        }
         editUser(r,m,s);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Autocomplete = new javax.swing.JPanel();
        autocompleteProducts = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        EditSalePanel = new javax.swing.JPanel();
        SaveLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        selectprdlabel = new javax.swing.JLabel();
        returnquantitylabel = new javax.swing.JLabel();
        first_name = new javax.swing.JTextField();
        useremail = new javax.swing.JTextField();
        returnquantitylabel1 = new javax.swing.JLabel();
        passwordlabel = new javax.swing.JLabel();
        Roles = new javax.swing.JComboBox<>();
        returnquantitylabel3 = new javax.swing.JLabel();
        userfullname = new javax.swing.JTextField();
        store = new javax.swing.JComboBox<>();
        selectprdlabel1 = new javax.swing.JLabel();
        phoneno = new javax.swing.JTextField();
        returnquantitylabel4 = new javax.swing.JLabel();
        mngr = new javax.swing.JComboBox<>();
        selectprdlabel2 = new javax.swing.JLabel();
        confirmlabel = new javax.swing.JLabel();
        password_field = new javax.swing.JPasswordField();
        confirmpass = new javax.swing.JPasswordField();
        passwordseparator = new javax.swing.JSeparator();
        changepassword = new javax.swing.JCheckBox();
        errormessage = new javax.swing.JLabel();

        autocompleteProducts.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        autocompleteProducts.setForeground(new java.awt.Color(0, 153, 255));
        autocompleteProducts.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
       

        jLabel8.setText("Image");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(115, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(108, 108, 108))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel8)
                .addGap(40, 40, 40)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AutocompleteLayout = new javax.swing.GroupLayout(Autocomplete);
        Autocomplete.setLayout(AutocompleteLayout);
        AutocompleteLayout.setHorizontalGroup(
            AutocompleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AutocompleteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(autocompleteProducts, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        AutocompleteLayout.setVerticalGroup(
            AutocompleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AutocompleteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AutocompleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(autocompleteProducts, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPopupMenu1.setFocusable(false);

        SaveLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SaveLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/icons8-checkmark-32.png"))); // NOI18N
        SaveLabel.setText("Save");
        SaveLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SaveLabel.setOpaque(true);
        SaveLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SaveLabelMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/icons8-ban-32.png"))); // NOI18N
        jLabel1.setText("Cancel");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/erasericon.png"))); // NOI18N
        jLabel2.setText("Clear");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jSeparator1.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.GreyInline"));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255), 5));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(0, 102, 255))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(0, 153, 255));

        selectprdlabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        selectprdlabel.setText("Store");

        returnquantitylabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        returnquantitylabel.setText("User Name");

        first_name.setColumns(20);
        first_name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        first_name.setSelectedTextColor(new java.awt.Color(68, 144, 194));

        useremail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        useremail.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        returnquantitylabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        returnquantitylabel1.setText("Email");

        passwordlabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        passwordlabel.setText("Password");

        Roles.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                RolesItemStateChanged(evt);
            }
        });

        returnquantitylabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        returnquantitylabel3.setText("Full name");

        userfullname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userfullname.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
       

        store.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                storeItemStateChanged(evt);
            }
        });

        selectprdlabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        selectprdlabel1.setText("Role");

        phoneno.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        phoneno.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
     

        returnquantitylabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        returnquantitylabel4.setText("Phone No");

        mngr.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mngrItemStateChanged(evt);
            }
        });

        selectprdlabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        selectprdlabel2.setText("Manager");

        confirmlabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        confirmlabel.setText("Confirm  Password");

        passwordseparator.setForeground(new java.awt.Color(51, 204, 255));
        passwordseparator.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));

        changepassword.setText("Change Password");
        changepassword.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
     
        
        changepassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changepasswordActionPerformed(evt);
            }
        });

        errormessage.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        errormessage.setForeground(new java.awt.Color(255, 51, 51));
        errormessage.setText("Error message");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordlabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(confirmlabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(password_field, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                            .addComponent(confirmpass))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(changepassword, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(returnquantitylabel4)
                            .addComponent(passwordseparator, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(returnquantitylabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(selectprdlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(returnquantitylabel1)
                            .addComponent(returnquantitylabel3))))
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userfullname, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                            .addComponent(phoneno, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(errormessage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(first_name, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                            .addComponent(useremail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                            .addComponent(Roles, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(selectprdlabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(store, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(selectprdlabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(mngr, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(28, Short.MAX_VALUE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(errormessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Roles, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(store, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(selectprdlabel))
                    .addComponent(selectprdlabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(first_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(returnquantitylabel)
                    .addComponent(mngr, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectprdlabel2))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userfullname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(returnquantitylabel3))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnquantitylabel1)
                    .addComponent(useremail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(returnquantitylabel4))
                .addGap(22, 22, 22)
                .addComponent(changepassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordseparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordlabel)
                    .addComponent(password_field, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(confirmpass, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmlabel))
                .addContainerGap(144, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout EditSalePanelLayout = new javax.swing.GroupLayout(EditSalePanel);
        EditSalePanel.setLayout(EditSalePanelLayout);
        EditSalePanelLayout.setHorizontalGroup(
            EditSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(EditSalePanelLayout.createSequentialGroup()
                .addGroup(EditSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditSalePanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(SaveLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EditSalePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        EditSalePanelLayout.setVerticalGroup(
            EditSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditSalePanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(EditSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(EditSalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SaveLabel)
                        .addComponent(jLabel2))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(285, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(EditSalePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(EditSalePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        first_name.setText("");
        useremail.setText("");
        userfullname.setText("");
        phoneno.setText("");
        password_field.setText("");
        confirmpass.setText("");
        mngr.setSelectedIndex(0); // Reset
    }//GEN-LAST:event_jLabel2MouseClicked

    public void editUser(int r,int m, int s) throws ClassNotFoundException, ParseException {
        first_name.setText(staffName);
        useremail.setText(email);
        userfullname.setText(lastName);
        phoneno.setText(phone);

        // Reverse the key-value mapping of storeMap
        Map<String, Integer> reverseStoreMap = new HashMap<>();
        for (Map.Entry<Integer, String> entry : storeMap.entrySet()) {
            reverseStoreMap.put(entry.getValue(), entry.getKey());
        }

        // Set the selected item of the JComboBox based on the ID
        String selectedStoreName = storeMap.get(s);
        store.setSelectedItem(selectedStoreName);

        String selectedRole = rolesMap.get(r);
        Roles.setSelectedItem(selectedRole);

        String selectedManager = managerMap.get(m);
        mngr.setSelectedItem(selectedManager);
    }

    private EditedUserData collectUserData() {
        // Retrieve data from UI components
        String enteredStaffName = first_name.getText();
        String enteredLastName = userfullname.getText();
        String enteredUserEmail = useremail.getText();
        String enteredUserPhone = phoneno.getText();

        // Get selected role ID from the combo box
        String selectedRole = (String) Roles.getSelectedItem();
        int selectedRoleId = -1;

        // Find the corresponding ID for the selected role
        for (Map.Entry<Integer, String> entry : rolesMap.entrySet()) {
            if (entry.getValue().equals(selectedRole)) {
                selectedRoleId = entry.getKey();

                break; // Exit loop once the ID is found
            }
        }

        // Get selected manager ID from the combo box
        String selectedManager = (String) mngr.getSelectedItem();
        int selectedManagerId = -1;

        // Find the corresponding ID for the selected manager
        for (Map.Entry<Integer, String> entry : managerMap.entrySet()) {
            if (entry.getValue().equals(selectedManager)) {
                selectedManagerId = entry.getKey();
                break; // Exit loop once the ID is found
            }
        }

        // Get selected store ID from the combo box
        String selectedStore = (String) store.getSelectedItem();
        int selectedStoreId = -1;

        // Find the corresponding ID for the selected store
        for (Map.Entry<Integer, String> entry : storeMap.entrySet()) {
            if (entry.getValue().equals(selectedStore)) {
                selectedStoreId = entry.getKey();
                break; // Exit loop once the ID is found
            }
        }

        // Determine if password should be changed
        boolean isPasswordChangeRequested = changepassword.isSelected();
        String status = "1";
        String enteredPassword = new String(this.password_field.getPassword());
        // Reset the fields of SelectedStaff
        //    SelectedStaff.reset();
        // Create a new Staff object
        EditedUser editedStaff = new EditedUser(enteredStaffName, enteredLastName, enteredUserEmail, enteredUserPhone, String.valueOf(selectedStoreId),
                status, String.valueOf(selectedManagerId), selectedRoleId, userId, enteredPassword);
        // Return UserData object containing the Staff object and the boolean value
        return new EditedUserData(editedStaff, isPasswordChangeRequested);
    }


    private void SaveLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveLabelMouseClicked
        EditedUserData editedUser = collectUserData();
        try {
            // Call the editStaff method in the Sales_Staffs class and pass the collected data
            Sales_Staffs.editStaff(editedUser);
            // Optionally, display a success message
            // Close the EditUser JFrame or perform any other action as needed
            this.dispose();
        } catch (Exception e) {
            // Handle any exceptions or display error messages
            e.printStackTrace();
        }
    }//GEN-LAST:event_SaveLabelMouseClicked


    private void changepasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changepasswordActionPerformed
        // TODO add your handling code here:
        password_field.setVisible(true);
        passwordlabel.setVisible(true);
        confirmpass.setVisible(true);
        confirmlabel.setVisible(true);
        passwordseparator.setVisible(true);
    }//GEN-LAST:event_changepasswordActionPerformed

    private void RolesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_RolesItemStateChanged
        String selectedText = (String) Roles.getSelectedItem();
        // Find the corresponding ID
        for (Map.Entry<Integer, String> entry : rolesMap.entrySet()) {
            if (entry.getValue().equals(selectedText)) {
                roleId = entry.getKey();
                break;
            }
        }
    }//GEN-LAST:event_RolesItemStateChanged


    private void storeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_storeItemStateChanged
        // TODO add your handling code here:
        String selectedText = (String) store.getSelectedItem();
        // Find the corresponding ID
        for (Map.Entry<Integer, String> entry : storeMap.entrySet()) {
            if (entry.getValue().equals(selectedText)) {
                storeId = entry.getKey();
                break;
            }
        }
    }//GEN-LAST:event_storeItemStateChanged

    private void mngrItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mngrItemStateChanged
        // TODO add your handling code here:
        String selectedText = (String) mngr.getSelectedItem();
        // Find the corresponding ID
        for (Map.Entry<Integer, String> entry : managerMap.entrySet()) {
            if (entry.getValue().equals(selectedText)) {
                managerId = entry.getKey();
                break;
            }
        }
    }//GEN-LAST:event_mngrItemStateChanged

    /**
     * @param selectedStaff
     * @throws java.lang.ClassNotFoundException
     * @throws java.text.ParseException
     */
    public static void main(SelectedStaff selectedStaff) throws ClassNotFoundException,
            ParseException {
       
         FlatGitHubIJTheme.setup();
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new EditUser(selectedStaff).setVisible(true);
            } catch (ClassNotFoundException | ParseException | SQLException ex) {
                Logger.getLogger(EditUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Autocomplete;
    private javax.swing.JPanel EditSalePanel;
    private static javax.swing.JComboBox<String> Roles;
    public static javax.swing.JLabel SaveLabel;
    private javax.swing.JList<String> autocompleteProducts;
    private javax.swing.JCheckBox changepassword;
    private javax.swing.JLabel confirmlabel;
    private static javax.swing.JPasswordField confirmpass;
    private static javax.swing.JLabel errormessage;
    public static javax.swing.JTextField first_name;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private static javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private static javax.swing.JComboBox<String> mngr;
    private static javax.swing.JPasswordField password_field;
    private javax.swing.JLabel passwordlabel;
    private javax.swing.JSeparator passwordseparator;
    public static javax.swing.JTextField phoneno;
    private javax.swing.JLabel returnquantitylabel;
    private javax.swing.JLabel returnquantitylabel1;
    private javax.swing.JLabel returnquantitylabel3;
    private javax.swing.JLabel returnquantitylabel4;
    private javax.swing.JLabel selectprdlabel;
    private javax.swing.JLabel selectprdlabel1;
    private javax.swing.JLabel selectprdlabel2;
    private static javax.swing.JComboBox<String> store;
    public static javax.swing.JTextField useremail;
    public static javax.swing.JTextField userfullname;
    // End of variables declaration//GEN-END:variables
}
