/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import static Authentication.Auth.Login;
import static Authentication.Encrpytion.encrypt;
import Classes.Utilities.Resources;
import static Database.DBConnect.getConnection;
import UserSettings.UserSettings;

import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatGitHubIJTheme;
import static com.nkanabo.Tienda.Utilities.milliConverter;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.URISyntaxException;
import java.net.URL;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Nkanabo
 */
public class launcher extends javax.swing.JFrame {

    static launcher Instance;

    /**
     * Creates new form Login
     *
     * @throws java.net.URISyntaxException
     */
    public launcher() throws URISyntaxException, IOException {
//        setPreferredSize(new Dimension(450, 260));
        FlatGitHubIJTheme.setup();
        initComponents();

        if (Instance != null) {
            Instance = new launcher();
        }

        String url = "resources/images/icons8.jpg";
        Resources rs = new Resources();
        File is = rs.getFileFromResource(url);

        String filepath = Paths.get(is.toURI()).toFile().getAbsolutePath();
        ImageIcon icon = new ImageIcon(filepath);
        setIconImage(icon.getImage());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ActivationCode = new javax.swing.JPanel();
        KeyLabel = new javax.swing.JLabel();
        key1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        key3 = new javax.swing.JTextField();
        key4 = new javax.swing.JTextField();
        key2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        response = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        ActivationCode.setBackground(java.awt.Color.white);
        ActivationCode.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Product activation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18), new java.awt.Color(51, 51, 255))); // NOI18N

        KeyLabel.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        KeyLabel.setText("Enter the Product Code");

        key1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                key1KeyReleased(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("SUBMIT");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        key3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                key3KeyReleased(evt);
            }
        });

        key4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                key4KeyReleased(evt);
            }
        });

        key2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                key2MouseReleased(evt);
            }
        });
        key2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                key2KeyReleased(evt);
            }
        });

        jLabel1.setText("-");

        jLabel2.setText("-");

        jLabel3.setText("-");

        response.setForeground(new java.awt.Color(255, 51, 51));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setText("CLEAR");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout ActivationCodeLayout = new javax.swing.GroupLayout(ActivationCode);
        ActivationCode.setLayout(ActivationCodeLayout);
        ActivationCodeLayout.setHorizontalGroup(
            ActivationCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActivationCodeLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(KeyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(ActivationCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ActivationCodeLayout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ActivationCodeLayout.createSequentialGroup()
                        .addComponent(key1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(key2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(key3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(key4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(response, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(181, Short.MAX_VALUE))
            .addGroup(ActivationCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ActivationCodeLayout.createSequentialGroup()
                    .addGap(461, 461, 461)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(642, Short.MAX_VALUE)))
        );
        ActivationCodeLayout.setVerticalGroup(
            ActivationCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActivationCodeLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(response, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ActivationCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(KeyLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ActivationCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(key1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(key4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(key3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(key2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ActivationCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(193, Short.MAX_VALUE))
            .addGroup(ActivationCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ActivationCodeLayout.createSequentialGroup()
                    .addGap(171, 171, 171)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(252, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ActivationCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ActivationCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        //keys input submit button

    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        notificationLabel("wait");
        String box1 = key1.getText();
        String box2 = key2.getText();
        String box3 = key3.getText();
        String box4 = key4.getText();

        String app_keys = box1 + box2 + box3 + box4;
        app_keys = encrypt(app_keys);

        LocalDate d1 = LocalDate.now(ZoneId.of("Europe/Paris"));

        long dateofExpiry;
        try {
            //60000 is one day into milliseconds
            dateofExpiry = milliConverter(String.valueOf(d1)) + 6000000;
            Connection conn = getConnection();
            Statement stmt = conn.createStatement();
            String sql = "SELECT * FROM Tienda.system_app_key"
                    + " where product_id = '" + app_keys + "'";
            ResultSet rs = stmt.executeQuery(sql);
            //STEP 4: Extract data from result set 
            if (rs.next()) {
                response.setText("");

                //Retrieve by column name 
                //Change to the next page after updating the
                // activation status column
                try {
                    // STEP 3: Execute a query 
                    String updatequery = "UPDATE Tienda.system_app_key set activation_status='1',"
                            + "expire_date = '" + dateofExpiry + "'";
                    int rsu = stmt.executeUpdate(updatequery);
                    UserSettings uS = new UserSettings();
                    uS.SetKey();
                    this.dispose();
                } catch (SQLException se) {
                    se.printStackTrace();
                }
                
                notificationLabel("complete");
                this.dispose();

                Login();
            } else {
                notificationLabel("complete");
                response.setText("Keys provided are invalid");
                //prompt the user to enter the valid keys
            }

            // STEP 5: Clean-up environment 
            rs.close();
            // finally block used to close resources
            stmt.close();
            conn.close();
        } catch (SQLException se) {
            // Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            // Handle errors for Class.forName
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void key1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_key1KeyReleased
        // TODO add your handling code here:
        if (key1.getText().length() == 4) {
            key2.requestFocus();
        }

    }//GEN-LAST:event_key1KeyReleased

    private void key2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_key2MouseReleased

    }//GEN-LAST:event_key2MouseReleased

    private void key2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_key2KeyReleased
        if (key2.getText().length() == 4) {
            this.requestFocusInWindow();
            key3.requestFocus();

        }
    }//GEN-LAST:event_key2KeyReleased

    private void key3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_key3KeyReleased
        // TODO add your handling code here:
        if (key3.getText().length() == 4) {
            this.requestFocusInWindow();
            key4.requestFocus();
        }
    }//GEN-LAST:event_key3KeyReleased

    private void key4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_key4KeyReleased
        // TODO add your handling code here:
        if (key4.getText().length() == 4) {
            notificationLabel("wait");
            jButton1ActionPerformed(null);
            notificationLabel("complete");
        }
    }//GEN-LAST:event_key4KeyReleased

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        key1.setText("");
        key2.setText("");
        key3.setText("");
        key4.setText("");
        response.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2KeyPressed

public void notificationLabel(String type) {
    switch (type) {
        case "wait":
            setButtonState(false, "/resources/images/loader.gif");
            break;

        case "complete":
            setButtonState(false, "/resources/images/loader.gif");
            scheduleButtonEnable(3000); // Schedule enabling the button after 3 seconds
            break;

        default:
            // Handle invalid type
            break;
    }
}


    public void setButtonState(boolean enabled, String iconPath) {
        jButton1.setEnabled(enabled);
        jButton1.setIcon(new ImageIcon(getClass().getResource(iconPath)));
    }

    private void scheduleButtonEnable(int delay) {
        Timer timer = new Timer(delay, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                setButtonState(true, ""); // Remove the loading GIF
                jButton1.setEnabled(true); // Enable the button
                ((Timer) e.getSource()).stop(); // Stop the timer after execution
            }
        });
        timer.setRepeats(false); // Execute only once
        timer.start();
    }


    public static void launcher() throws UnsupportedLookAndFeelException {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        UIManager.setLookAndFeel(new FlatIntelliJLaf());
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new launcher().setVisible(true);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(launcher.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(launcher.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private InputStream getFileFromResourceAsStream(String fileName) {

        // The class loader that loaded the class
        ClassLoader classLoader = getClass().getClassLoader();
        InputStream inputStream = classLoader.getResourceAsStream(fileName);

        // the stream holding the file content
        if (inputStream == null) {
            throw new IllegalArgumentException("file not found! " + fileName);
        } else {
            return inputStream;
        }

    }

    private File getFileFromResource(String fileName) throws URISyntaxException {

        ClassLoader classLoader = getClass().getClassLoader();
        URL resource = classLoader.getResource(fileName);
        if (resource == null) {
            throw new IllegalArgumentException("file not found! " + fileName);
        } else {

            // failed if files have whitespaces or special characters
            //return new File(resource.getFile());
            return new File(resource.toURI());
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ActivationCode;
    private javax.swing.JLabel KeyLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField key1;
    private javax.swing.JTextField key2;
    private javax.swing.JTextField key3;
    private javax.swing.JTextField key4;
    private javax.swing.JLabel response;
    // End of variables declaration//GEN-END:variables
}
